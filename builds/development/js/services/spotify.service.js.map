{"version":3,"sources":["services/spotify.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;YAMA;gBAGI,wBAAoB,KAAU;oBAAV,UAAK,GAAL,KAAK,CAAK;oBAD9B,aAAQ,GAAQ,4BAA4B,CAAC;gBAI7C,CAAC;gBACD,8BAAK,GAAL,UAAM,GAAU,EAAE,MAAqB;oBAEnC,IAAI,IAAI,GAAC,KAAG,IAAI,CAAC,QAAQ,GAAG,GAAK,CAAC;oBAClC,EAAE,CAAC,CAAC,MAAM,CAAC;wBACP,IAAI,GAAI,IAAI,SAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAG,CAAC;oBACnC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBACtB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,CAC/B,UAAC,GAAO,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CACzB,CAAC;gBACN,CAAC;gBAED,+BAAM,GAAN,UAAO,KAAY,EAAC,IAAW;oBAE3B,IAAI,MAAM,GAAU;wBAChB,QAAK,KAAK,CAAE;wBACZ,WAAQ,IAAI,CAAE;wBACd,YAAY,CAAC,CAAC;oBAClB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAC,MAAM,CAAC,CAAC;gBACxC,CAAC;gBAED,oCAAW,GAAX,UAAY,KAAY;oBAEpB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAC,OAAO,CAAC,CAAC;gBACtC,CAAC;gBAED,iCAAQ,GAAR,UAAS,EAAS;oBAEd,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,aAAW,EAAI,CAAC,CAAC;gBACvC,CAAC;gBAED,iCAAQ,GAAR,UAAS,EAAS;oBAEd,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,aAAW,EAAI,CAAC,CAAC;gBACvC,CAAC;gBACD,kCAAS,GAAT,UAAU,EAAS;oBAEf,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,cAAY,EAAI,CAAC,CAAC;gBACxC,CAAC;gBA7CL;oBAAC,iBAAU,EAAE;;kCAAA;gBA8Cb,qBAAC;YAAD,CA7CA,AA6CC,IAAA;YA7CD,2CA6CC,CAAA","file":"services/spotify.service.js","sourcesContent":["import {Http} from 'angular2/http';\r\nimport {Injectable} from 'angular2/core';\r\nimport {Observable} from 'rxjs/Observable';\r\n\r\nimport 'rxjs/Rx';\r\n@Injectable()\r\nexport class SpotifyService\r\n{\r\n    base_url:string=\"https://api.spotify.com/v1\";\r\n    constructor(private _http:Http)\r\n    {\r\n\r\n    }\r\n    query(url:string ,params?:Array<string>)\r\n    {\r\n        let qUrl=`${this.base_url}${url}`;\r\n        if (params)\r\n            qUrl=`${qUrl}?${params.join(\"&\")}`;\r\n            console.log(qUrl);\r\n        return this._http.request(qUrl).map(\r\n            (res:any)=> res.json()\r\n        );\r\n    }\r\n\r\n    search(query:string,type:string):Observable<any[]>\r\n    {\r\n        let params:string[]=[\r\n            `q=${query}`,\r\n            `type=${type}`,\r\n            'market=US '];\r\n        return this.query('/search',params);\r\n    }\r\n\r\n    searchTrack(query:string):Observable<any[]>\r\n    {\r\n        return this.search(query,'track');\r\n    }\r\n\r\n    getTrack(id:string):Observable<any[]>\r\n    {\r\n        return this.query(`/tracks/${id}`);\r\n    }\r\n\r\n    getAlbum(id:string):Observable<any[]>\r\n    {\r\n        return this.query(`/albums/${id}`);\r\n    }\r\n    getArtist(id:string):Observable<any[]>\r\n    {\r\n        return this.query(`/artists/${id}`);\r\n    }\r\n}"],"sourceRoot":"/source/"}