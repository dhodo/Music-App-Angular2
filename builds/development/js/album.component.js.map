{"version":3,"sources":["album.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;YASA;gBAII,wBAAmB,YAAwB,EAAQ,QAAuB,EAAQ,iBAAkC;oBAAjG,iBAAY,GAAZ,YAAY,CAAY;oBAAQ,aAAQ,GAAR,QAAQ,CAAe;oBAAQ,sBAAiB,GAAjB,iBAAiB,CAAiB;oBAChH,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;gBAC/B,CAAC;gBAED,iCAAQ,GAAR;oBAAA,iBAaC;oBAXG,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;oBAC3B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBACtC,EAAE,CAAC,CAAC,CAAE,IAAI,CAAC,EAAE,CAAC,CACd,CAAC;wBACG,OAAO,CAAC,GAAG,CAAE,YAAY,CAAC,CAAC;wBAC3B,MAAM,CAAA;oBACV,CAAC;oBACD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAErC,UAAC,GAAO,IAAK,OAAA,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAArB,CAAqB,CACrC,CAAC;gBACN,CAAC;gBACD,6BAAI,GAAJ;oBACI,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;gBAClC,CAAC;gBAED,oCAAW,GAAX,UAAY,GAAO;oBAEf,IAAI,CAAC,KAAK,GAAC,GAAG,CAAC;gBACnB,CAAC;gBAlCL;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAC,OAAO;wBAChB,UAAU,EAAC,CAAC,wBAAe,EAAC,mBAAU,CAAC;wBACvC,WAAW,EAAC,8BAA8B;qBAC7C,CAAC;;kCAAA;gBAgCF,qBAAC;YAAD,CA/BA,AA+BC,IAAA;YA/BD,2CA+BC,CAAA","file":"album.component.js","sourcesContent":["import {Component, OnInit} from 'angular2/core';\r\nimport {CORE_DIRECTIVES} from 'angular2/common';\r\nimport {LocationStrategy, RouterLink, RouteParams } from 'angular2/router';\r\nimport {SpotifyService} from './services/spotify.service';\r\n@Component({\r\n    selector:'album',\r\n    directives:[CORE_DIRECTIVES,RouterLink],\r\n    templateUrl:'partials/albumComponent.html'\r\n})\r\nexport class AlbumComponent implements OnInit\r\n{\r\n    album:Object;\r\n    id:string;\r\n    constructor(public _routeParams:RouteParams,public _spotify:SpotifyService,public _locationstrategy:LocationStrategy){\r\n        console.log(\"Constructor\");\r\n    }\r\n\r\n    ngOnInit()\r\n    {\r\n        console.log(\"In ngOnInit\");\r\n        this.id = this._routeParams.get(\"id\");\r\n        if (! this.id)\r\n        {\r\n            console.log( \"ID IS NULL\");\r\n            return\r\n        }\r\n        this._spotify.getAlbum(this.id).subscribe\r\n        (\r\n            (res:any) => this.renderAlbum(res)\r\n        );\r\n    }\r\n    back():void{\r\n        this._locationstrategy.back();\r\n    }\r\n\r\n    renderAlbum(res:any)\r\n    {\r\n        this.album=res;\r\n    }\r\n\r\n}"],"sourceRoot":"/source/"}