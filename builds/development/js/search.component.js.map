{"version":3,"sources":["search.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAcA;gBAMI,yBAAmB,OAAsB,EAAS,MAAa,EAAS,WAAuB;oBAA5E,YAAO,GAAP,OAAO,CAAe;oBAAS,WAAM,GAAN,MAAM,CAAO;oBAAS,gBAAW,GAAX,WAAW,CAAY;oBAE3F,IAAI,CAAC,cAAc,GAAC,KAAK,CAAC;gBAE9B,CAAC;gBACD,kCAAQ,GAAR;oBAEI,IAAI,CAAC,MAAM,EAAE,CAAC;gBAClB,CAAC;gBACD,mCAAS,GAAT;oBAEI,IAAI,CAAC,cAAc,GAAC,IAAI,CAAC;oBACzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBACzB,CAAC;gBACD,gCAAM,GAAN;oBAAA,iBAWC;oBATG,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;oBAC1C,IAAI,CAAC,KAAK,GAAC,KAAK,CAAC;oBACjB,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CACX,CAAC;wBACG,MAAM,CAAC;oBACX,CAAC;oBACD,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,SAAS,CACrC,UAAC,GAAO,IAAK,OAAA,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,EAAvB,CAAuB,CACvC,CAAC;gBACN,CAAC;gBAED,uCAAa,GAAb,UAAc,GAAO;oBACjB,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC;oBAClB,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAC1C,CAAC;wBACG,IAAI,CAAC,OAAO,GAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC;oBAClC,CAAC;gBACL,CAAC;gBAED,gCAAM,GAAN,UAAO,KAAY;oBAEf,IAAI,CAAC,KAAK,GAAC,KAAK,CAAC;oBACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAC,EAAC,KAAK,EAAC,KAAK,EAAC,CAAC,CAAC,CAAA;oBAC/C,IAAI,CAAC,MAAM,EAAE,CAAC;gBAClB,CAAC;gBAzCD;oBAAC,mBAAY,CAAC,UAAU,CAAC;;2DAAA;gBAb7B;oBAAC,gBAAS,CACN;wBACI,QAAQ,EAAC,QAAQ;wBACjB,UAAU,EAAC,CAAC,mBAAU,EAAE,wBAAe,CAAC;wBACxC,WAAW,EAAC,+BAA+B;qBAE9C,CACJ;;mCAAA;gBAiDD,sBAAC;YAAD,CAhDA,AAgDC,IAAA;YAhDD,6CAgDC,CAAA","file":"search.component.js","sourcesContent":["import {Component,OnInit,ViewChildren,Input} from 'angular2/core';\r\nimport {CORE_DIRECTIVES} from 'angular2/common';\r\nimport {Router, RouterLink, RouteParams } from 'angular2/router';\r\n\r\nimport {SpotifyService } from './services/spotify.service';\r\n\r\n@Component(\r\n    {\r\n        selector:'search',\r\n        directives:[RouterLink, CORE_DIRECTIVES],\r\n        templateUrl:'partials/searchComponent.html',\r\n        \r\n    }\r\n)\r\nexport class SearchComponent implements OnInit\r\n{\r\n    query:string;\r\n    results:Object;\r\n    searchRequired:boolean;\r\n    @ViewChildren('newquery') vc;\r\n    constructor(public spotify:SpotifyService, public router:Router, public routeParams:RouteParams)\r\n    {\r\n        this.searchRequired=false;\r\n        \r\n    }\r\n    ngOnInit()\r\n    {\r\n        this.search();\r\n    }\r\n    searchreq()\r\n    {\r\n        this.searchRequired=true; \r\n        console.log(this.vc);      \r\n    }\r\n    search():void{\r\n        \r\n        let query = this.routeParams.get(\"query\");\r\n        this.query=query;\r\n        if (!query)\r\n        {\r\n            return;\r\n        }\r\n        this.spotify.searchTrack(query).subscribe(\r\n            (res:any) => this.renderResults(res)\r\n        );\r\n    }\r\n\r\n    renderResults(res:any):void{\r\n        this.results=null;\r\n        if (res && res.tracks && res.tracks.items)\r\n        {\r\n            this.results=res.tracks.items;\r\n        }\r\n    }\r\n\r\n    submit(query:string):void\r\n    {\r\n        this.query=query;\r\n        this.router.navigate(['/Search',{query:query}])\r\n        this.search();\r\n    }\r\n\r\n} "],"sourceRoot":"/source/"}